import json
import os

import google.generativeai as genai

genai.configure(api_key=os.getenv("GOOGLEAI_API_KEY"))
disclaimer = "\n<i>Generated by AI (Google Gemini 1.5)</i>"
error_message = "<i>This feature is temporarily unavailable</i>"


def explainSong(lyrics):
    response = ""
    try:
        model = genai.GenerativeModel("gemini-1.5-flash")
        response = model.generate_content(
            ["Explain this hymn in up to 7 lines", lyrics]
        ).text
        response += disclaimer
    except:
        return error_message
    return response


def findSongs(query, titles):
    try:
        model = genai.GenerativeModel("gemini-1.5-flash")
        response = model.generate_content(
            [
                "Using only this list of hymn titles, return in order of relevance a selection of up to 10 hymns based on the query below. If the query seems irrelevant, return an empty json.",
                titles,
                "Query: " + query,
                "In the response json, key is the hymn title, value is a brief explanation for your choice.",
            ],
            generation_config=genai.GenerationConfig(
                response_mime_type="application/json"
            ),
        ).text
        data = json.loads(response)
        data.pop("", None)
        return data
    except:
        return {}
